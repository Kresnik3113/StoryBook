@model IEnumerable<StoryBook.Models.Character>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<p>
    @using (@Html.BeginForm("IndexSearch", "Characters", FormMethod.Get))
    {
        <b>Search By:</b>
        @Html.RadioButton("searchBy", "Name", true) <text>Name</text>
        @Html.RadioButton("searchBy", "DOB") <text>DOB</text>
        @Html.RadioButton("searchBy", "Personalty") <text>Personalty</text>
        @Html.RadioButton("searchBy", "Apperance") <text>Apperance</text><br />
        @Html.TextBox("search") <input type="submit" value="search" />
    }
</p>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DOB)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Personalty)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Apperance)
        </th>
        <th></th>
    </tr>
    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="4">
                No records match search criteria
            </td>
        </tr>
    }
    else
    {

        foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DOB)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Personalty)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Apperance)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.CharacterId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.CharacterId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.CharacterId })
                </td>
            </tr>
        }
    }

    </table>
